БАЗОВЫЕ ОПЕРАЦИИ

+ # плюс
- # минус
/ # поделить
* # умножить
** # возведение в степень
// # сколько в числе есть чисел. Например 25//5 выведет 5 потому что в числе 25 пять пятерок(5,10,15,20.25)
% # остача при делении
min(данные)
# ищет минимум среди данных
max(данные)
# ищет максимум среди данных
abs(данные)
# число по модулю
pow(число которое возводим в степень, степень)
# возведения числа в определенную степень
round(данные)
# округляет данные
42.607 
# дробные числа, просто через точку
print(sep = " ")
# sep = "тут пишем тип разделителя". эта команда устааклвает определенный разделитель между элементами которые выводим
print (end = "")
# указывает то что будет находиться в конце строки(оьычно это \n (переход на новую строку))
\n 
# переход на новую строку 
\t
# символ  табуляции (ТАВ)
\ 
# указатель что далее идет обычный символ 
print("some\" thing \"")
# выведет слово thing в кавычкх "" если бы мы записали без \ то выдало ошибку 
input()
# берет значения от пользователя (как cin в С++)
# точка с запятой в конце строки не нужна её НЕ ПИСАТЬ!!!

ПЕРЕМЕННЫЕ И ТИПЫ ДАННЫХ

# Нельзя создававть переменные с зарезервироваными именами (например переменную list создать нельзя потому что оно зарезервировано)
# переменная создаеться путем просто вписания ее названия в строку т.е.
test = 12               # переменная test равна 12
# указывать тип переменной не надо просто пишешь название и пишешь чему равна,
# если в переменной буквы а не числа то пишем так
test = "String"          # равносильно char в С
# переменную нельзя начинать с цифр или с символов, только с букв!!!
# пишем так что бы в переменную записывалось число, а не просто символ ввиде числа
num_1 = int(input("Enter num: "))
del test                 # Удаляет переменную х
# и то и то назначает переменной num_1 значение цифры(не просто символов!!) 34
num_1 = 34 == num_1 = int("34")
num_1 = str(21)          # это уже не число а просто строка(как char)
num_1 = num_1 + 5 == num_1 += 5     # увеличение переменной num_1 на 5

# умножение работает так же и со строками
Res = ("Enter something ")
Res *= 5
print(Res)
# код выведет текст Enter something 5 раз

Урок 3

if условие:
    код
elif условие:       # Если условие выше не выполнено а это условие подошло то
    код             # будет выполнен код который пренадлежит этому условию если нет то он просто пропустится
else:               # Если никакое условие не подошло то будет выполнен этот
    код

# Смена значения переменнй с помощью условного оператора
name = input()
A = 'Yes' if name != "test" else 'No'
print(A)

Урок 4

while условие:     # Код будет выполняться пока будет соблюдено условие
    код

for переменная in то в чем ищем или масив и тд и тп:
    # end  означает что мы не будем переходить на новую строку после каждого принта
print(j*2, end='')
# он означает что переход на новую строку будет когда кончаться скобки '

# Урок 4

x = 'dsdsfds'; # Строка а не лист

l=[] # это уже лист с названием l
# что бы использовать функции с листом мы доолжны поставить после названия точку

# функции для списков
l.append (34) # добавляет число 23 в конец списка l

b = [24,67]
l.extend (b) # добавляет элементы списка b в конец списка l

l.insert (1, 56) #добавляет число 56 на позицию 1 в список l

l.remove (34) # удаляет первый попавшийся элемент со значением 34 из списка l

l.pop (0) # удаляет первый элемент из списка l, если ничего не ставить то удалит последний элемент

l.sort () # сортирует элементы списка l в порядке возрастания

l.reverse () # изменяет порядок следования элементов в списке l на противоположны

l.clear () # удаляет все элементы из списка l

print (l.index(56)) # возвращает индекс первого элемента со значением 56 в списке l

print (l.count(34)) # возвращает количество элементов со значением 34 в списке l

Урок 5 

print (l[2]) # выводит второй элемент списка l
print (l[-2]) # выводит второй с конца

item[START:STOP:STEP] # item - название списка
                      # start - индекс первого элемента среза(убереться кол-ство элементов сначала)
                      # stop - индекс последнего элемента среза (убереться с конце среза).
                      # step - интервал между элементами среза(если поставить 2 то будет перепрыгивать и брать каждый второй элемент).

Урок 6

a = (43,56) # Это кортеж, список элементы коорого нельзя менять
a.__sizeof__() # получаем размер списка а (в байтах)
a = tuple("hello world") # разбивает hello world по буквам и получим следующее ('h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd')

# функции которые есть у списка могут работать и с кортежем, кроме тех которые добавляют чтото или удаляют

